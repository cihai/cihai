[tool.poetry]
name = "cihai"
version = "0.33.0"
description = "Library for CJK (chinese, japanese, korean) language data."
license = "MIT"
authors = ["Tony Narlock <tony@git-pull.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Software Development :: Localization",
  "Topic :: Utilities",
]
keywords = [
  "unihan",
  "sqlalchemy",
  "library",
  "cjk",
  "unicode",
  "dictionary",
  "dataset",
  "encyclopedia",
  "chinese",
  "japanese",
  "korean",
  "languages",
  "study",
]
homepage = "https://cihai.git-pull.com"
readme = "README.md"
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "examples", format = "sdist" },
  { path = "tests", format = "sdist" },
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/cihai/cihai/issues"
Documentation = "https://cihai.git-pull.com"
Repository = "https://github.com/cihai/cihai"
"Release notes" = "https://github.com/cihai/cihai/blob/master/CHANGES"
"Q & A" = "https://github.com/cihai/cihai/discussions"

[tool.poetry.dependencies]
python = "^3.8"
appdirs = "*"
PyYAML = "~6.0"
sqlalchemy = { extras = ["mypy"], version = "~2.0" }
unihan-etl = "~=0.34.0"
typing-extensions = "^4"
pydantic = "~2.7"

[tool.poetry.group.docs.dependencies]
### Docs ###
sphinx = "*"
sphinx-argparse = "*"
furo = "*"
gp-libs = "*"
sphinx-autobuild = "*"
sphinx-autodoc-typehints = "*"
sphinx-inline-tabs = "*"
sphinxext-opengraph = "<0.8" # https://github.com/wpilibsuite/sphinxext-opengraph/issues/100
sphinx-copybutton = "*"
sphinxext-rediraffe = "*"
myst_parser = ">=0.18.1"
docutils = "*"
linkify-it-py = "*"

[tool.poetry.group.test.dependencies]
### Testing ###
pytest = "*"
pytest-rerunfailures = "*"
pytest-watcher = "*"
gp-libs = "*"

[tool.poetry.group.coverage.dependencies]
### Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = "*"

[tool.poetry.group.lint.dependencies]
### Lint ###
ruff = "*"
mypy = "*"

[tool.poetry.group.typings.dependencies]
### Typings ###
types-appdirs = "*"
types-colorama = "*"
types-PyYAML = "*"

[tool.mypy]
strict = true
plugins = [
  "sqlalchemy.ext.mypy.plugin",
]
files = [
  "src/",
  "tests/",
]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = ["unihan_etl", "cihai"]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "src/cihai",
  "tests",
  "docs",
]
filterwarnings = [
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
]

[tool.pytest-watcher]
now = true
ignore_patterns = ["*.py.*.py"]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
